---

- name: clone automysqlbackup repository to ansible-host
  when:
    - automysqlbackup_source == "git"
  block:
    - name: create local temp directory
      become: false
      delegate_to: localhost
      ansible.builtin.file:
        path: "{{ local_tmp_directory }}/automysqlbackup/{{ automysqlbackup_version }}"
        state: directory
        mode: 0750

    - name: download git sources to local directory
      become: false
      delegate_to: localhost
      ansible.builtin.git:
        repo: "{{ automysqlbackup_git.repository }}"
        version: "{{ automysqlbackup_git.version | default('master') }}"
        dest: "{{ local_tmp_directory }}/automysqlbackup/{{ automysqlbackup_version }}"
        depth: 1
        update: true
        force: true

    - name: create transfer archive
      become: false
      delegate_to: localhost
      community.general.archive:
        path: "{{ local_tmp_directory }}/automysqlbackup/{{ automysqlbackup_version }}"
        dest: "{{ local_tmp_directory }}/automysqlbackup_{{ automysqlbackup_version }}.tar.gz"
        mode: 0750

    - name: define automysqlbackup download directory
      ansible.builtin.set_fact:
        automysqlbackup_download_directory: "/tmp/automysqlbackup/{{ automysqlbackup_version }}"

- name: download automysqlbackup archive to ansible-host
  when:
    - automysqlbackup_source == "archive"
  block:

    - name: download automysqlbackup archive
      become: false
      delegate_to: localhost
      run_once: true
      ansible.builtin.get_url:
        url: "{{ automysqlbackup_archive }}"
        dest: "{{ local_tmp_directory }}/automysqlbackup_{{ automysqlbackup_version }}.tar.gz"
        mode: 0640
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: define automysqlbackup download directory
      ansible.builtin.set_fact:
        automysqlbackup_download_directory: "/tmp/automysqlbackup/AutoMySQLBackup-{{ automysqlbackup_version }}"

- name: propagate automysqlbackup.tgz
  become: true
  ansible.builtin.copy:
    src: "{{ local_tmp_directory }}/automysqlbackup_{{ automysqlbackup_version }}.tar.gz"
    dest: /tmp
    mode: 0640

- name: create temp directory
  ansible.builtin.file:
    path: /tmp/automysqlbackup
    state: directory
    mode: 0750

- name: extract automysqlbackup.tgz
  ansible.builtin.unarchive:
    src: "/tmp/automysqlbackup_{{ automysqlbackup_version }}.tar.gz"
    dest: /tmp/automysqlbackup
    remote_src: true
